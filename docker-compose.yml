version: '3.9'

services:
  api01: &api
    build: .
    ports:
      - 8081:8080
    depends_on:
      database:
        condition: service_healthy
    environment:
      - PORT=8080
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=database
      - DB=db        
    restart: always
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "50MB"

  api02:
    <<: *api
    ports:
      - 8082:8080

  database:
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    volumes:
      - ./configs/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: 'postgres -c config_file=/etc/postgresql/postgresql.conf'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.70"
          memory: "350MB"
  
  nginx:
    image: nginx:latest
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "100MB"

networks:
  default:
    driver: bridge